"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
Page({
    data: {
        bgmList: [],
        serverUrl: app.serverUrl,
        videoParams: {
            duration: '',
            tempHeight: 0,
            tempWidth: 0,
            tempFilePath: '',
            tempConverPath: ''
        }
    },
    onLoad: function (params) {
        var _this = this;
        console.log('videoParams', params);
        _this.setData({
            videoParams: params
        });
        wx.showLoading({
            title: '获取BGM...'
        });
        wx.request({
            url: app.serverUrl + "/bgm/list",
            method: 'GET',
            header: {
                'Content-type': 'application/json'
            },
            success: function (res) {
                wx.hideLoading();
                if (res.data.status === 200) {
                    _this.setData({
                        bgmList: res.data.data
                    });
                }
            }
        });
    },
    uploadVideo: function (e) {
        var _this = this;
        var bgmId = e.detail.value.bgmId;
        var desc = e.detail.value.desc;
        var duration = _this.data.videoParams.duration || '0';
        var tmpHeight = _this.data.videoParams.tempHeight || 0;
        var tempWidth = _this.data.videoParams.tempWidth || 0;
        var tempVideoPath = _this.data.videoParams.tempFilePath || '';
        wx.showLoading({
            title: '上传中...'
        });
        wx.uploadFile({
            url: app.serverUrl + "/video/upload",
            formData: {
                userId: app.userInfo.id,
                bgmId: bgmId,
                videoSeconds: duration,
                videoWidth: tempWidth,
                videoHeight: tmpHeight,
                desc: desc,
            },
            filePath: tempVideoPath,
            name: 'file',
            header: {
                'Content-type': 'application/json'
            },
            success: function (res) {
                wx.hideLoading();
                var data = JSON.parse(res.data);
                console.log('upload video :', data);
                if (data.status === 200) {
                    wx.navigateBack({
                        delta: 1
                    });
                    wx.showToast({
                        title: '上传成功~',
                        icon: 'success',
                        duration: 1000
                    });
                }
                else {
                    wx.showToast({
                        title: '上传失败~'
                    });
                }
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,